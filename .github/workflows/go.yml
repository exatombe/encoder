name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.2'

    # Linux Build
    - name: Build for Linux
      run: |
        GOOS=linux GOARCH=amd64 go build -o encoder-linux -v ./...

    # Windows Build
    - name: Build for Windows
      run: |
        GOOS=windows GOARCH=amd64 go build -o encoder-windows.exe -v ./...

    # MacOS Build
    - name: Build for MacOS
      run: |
        GOOS=darwin GOARCH=amd64 go build -o encoder-macos -v ./...

    - name: Test
      run: go test -v ./...

    - name: Create Release
      if: github.event_name == 'push'
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: 'v1.0.${{ github.run_number }}'
        release_name: 'Release v1.0.${{ github.run_number }}'
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Linux Asset
      if: github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./encoder-linux
        asset_name: encoder-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows Asset
      if: github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./encoder-windows.exe
        asset_name: encoder-windows.exe
        asset_content_type: application/octet-stream

    - name: Upload MacOS Asset
      if: github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./encoder-macos
        asset_name: encoder-macos
        asset_content_type: application/octet-stream
